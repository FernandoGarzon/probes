#!/usr/bin/env python
#Copyright European Organization for Nuclear Research (CERN) 2013
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Fernando Garzon, <oscar.fernando.garzon.miguez@cern.ch>, 2020

'''
Probe to check the number of deletable files per rse, as well as
the total deletable space per rse.
'''
import sys
from rucio.core import monitor
from rucio.db.sqla.session import BASE, get_session

# Exit statuses
OK, WARNING, CRITICAL, UNKNOWN = 0, 1, 2, 3

if BASE.metadata.schema:
    schema = BASE.metadata.schema + '.'
else:
    schema = ''

if __name__ == "__main__":
    try:
        SESSION = get_session()
        query = '''
        SELECT  a.site,  NVL(b.files, 0) AS files, NVL(b.bytes, 0)  AS bytes, sys_extract_utc(localtimestamp) AS updated_at
            from
                (
                    SELECT ID AS rse_id, RSE as Site FROM CMS_RUCIO_PROD.rses WHERE deleted=0
                ) a
         LEFT OUTER JOIN
            (
                SELECT rse_id, COUNT(1) AS files, SUM(bytes) AS bytes FROM CMS_RUCIO_PROD.replicas
                    WHERE
                        (     tombstone IS NOT NULL AND tombstone < sys_extract_utc(localtimestamp) ) or ( tombstone IS NOT NULL and (state ='U' OR state = 'D'))GROUP BY rse_id
                        ) b
        ON a.rse_id=b.rse_id
'''.format(schema=schema)
        result = SESSION.execute(query)


        for rse,files,space,time in result.fetchall():
            print(rse,files)
            monitor.record_gauge(stat='judge.deletable_files.%s' %rse, value=files)
    except Exception as error:
        print(error)
        sys.exit(UNKNOWN)
    sys.exit(OK)
    